---
import path from "node:path";
import License from "@components/misc/License.astro";
import Markdown from "@components/misc/Markdown.astro";
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { getSortedPosts } from "@utils/content-utils";
import { getDir, getPostUrlBySlug } from "@utils/url-utils";
import { Icon } from "astro-icon/components";
import { licenseConfig } from "src/config";
import ImageWrapper from "../../components/misc/ImageWrapper.astro";
import PostMetadata from "../../components/PostMeta.astro";
import { profileConfig, siteConfig } from "../../config";
import { formatDateToYYYYMMDD } from "../../utils/date-utils";
import StructuredData from "../../components/seo/StructuredData.astro";
import InternalLinks from "../../components/seo/InternalLinks.astro";
import { optimizeTitle, generateDescription, extractKeywords, calculateReadingTime } from "@utils/seo-utils";

export async function getStaticPaths() {
	const blogEntries = await getSortedPosts();
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const { remarkPluginFrontmatter } = await entry.render();

// 使用SEO工具优化标题和描述
const originalTitle = entry.data.title;
const originalDescription = entry.data.description || '';
const tags = entry.data.tags || [];
const lang = entry.data.lang || 'zh';

// 计算阅读时间和字数
const readingTime = calculateReadingTime(entry.body);
const wordCount = entry.body.replace(/<[^>]*>/g, '').split(/\s+/).filter(word => word.length > 0).length;

// 提取关键词（如果没有标签）
const extractedKeywords = tags.length > 0 ? tags : extractKeywords(entry.body, 5);

// 优化标题
const title = optimizeTitle(originalTitle, {
	maxLength: 60,
	addKeywords: extractedKeywords.slice(0, 2), // 只添加前2个关键词
	addSiteTitle: true
});

// 优化描述
const description = originalDescription || generateDescription(entry.body, 160);
const keywords = extractedKeywords;

// 获取文章图片用于结构化数据和社交分享
const articleImage = entry.data.image || siteConfig.defaultPostImage;
const fullImageUrl = articleImage?.startsWith('http') 
	? articleImage 
	: articleImage ? new URL(articleImage, Astro.site).href : undefined;

// 构建博客文章的结构化数据
const blogPostingData = {
	headline: title,
	description: description,
	keywords: keywords,
	datePublished: formatDateToYYYYMMDD(entry.data.published),
	...(entry.data.updated && { dateModified: formatDateToYYYYMMDD(entry.data.updated) }),
	inLanguage: lang.replace("_", "-"),
	...(fullImageUrl && { 
		image: {
			"@type": "ImageObject",
			url: fullImageUrl,
			width: 1200,
			height: 630
		}
	}),
	url: Astro.url.href,
	wordCount: wordCount,
	timeRequired: `PT${readingTime}M`
};
---
<MainGridLayout 
	banner={entry.data.image} 
	title={title} 
	description={description} 
	lang={lang} 
	setOGTypeArticle={true} 
	headings={headings}
	image={articleImage}
	keywords={keywords}
>
    <StructuredData slot="head" type="BlogPosting" data={blogPostingData} />
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
        <div id="post-container" class:list={["card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
            {}
        ]}>
            <!-- word count and reading time -->
            <div class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation">
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:notes-rounded"></Icon>
                    </div>
                    <div class="text-sm text-black/30 dark:text-white/30">{remarkPluginFrontmatter.words} {" " + i18n(I18nKey.wordsCount)}</div>
                </div>
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:schedule-outline-rounded"></Icon>
                    </div>

                    <div class="text-sm">
                        {remarkPluginFrontmatter.minutes} {" " + i18n(remarkPluginFrontmatter.minutes === 1 ? I18nKey.minuteCount : I18nKey.minutesCount)}
                    </div>

                </div>
            </div>

            <!-- title -->
            <div class="relative onload-animation">
                <div
                    data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title"
                    class="transition w-full block font-bold mb-3
                    text-3xl md:text-[2.25rem]/[2.75rem]
                    text-black/90 dark:text-white/90
                    md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]
                ">
                    {entry.data.title}
                </div>
            </div>

            <!-- metadata -->
            <div class="onload-animation">
                <PostMetadata
                        class="mb-5"
                        published={entry.data.published}
                        updated={entry.data.updated}
                        tags={entry.data.tags}
                        category={entry.data.category}
                ></PostMetadata>
                {!entry.data.image && <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5"></div>}
            </div>

            <!-- always show cover as long as it has one -->

            {/* 总是显示封面图片，如果没有指定则使用默认图片 */}
            <ImageWrapper 
                id="post-cover" 
                src={(entry.data.image || siteConfig.defaultPostImage) as string}
                basePath={entry.data.image ? path.join("content/posts/", getDir(entry.id)) : ""} 
                class="mb-8 rounded-xl banner-container onload-animation"
            />


            <Markdown class="mb-6 markdown-content onload-animation prose dark:prose-invert">
                <Content />
            </Markdown>

            <!-- 内部链接组件，提高页面权重传递 -->
            <InternalLinks 
                currentTags={entry.data.tags}
                currentSlug={entry.slug}
                maxLinks={5}
                showTitle={true}
                customTitle="相关推荐"
            />

            {licenseConfig.enable && <License title={entry.data.title} slug={entry.slug} pubDate={entry.data.published} class="mb-6 rounded-xl license-container onload-animation"></License>}

        </div>
    </div>

    <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
        <a href={entry.data.nextSlug ? getPostUrlBySlug(entry.data.nextSlug) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.nextSlug}]}>
            {entry.data.nextSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-start gap-4" >
                <Icon name="material-symbols:chevron-left-rounded" class="text-[2rem] text-[var(--primary)]" />
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.nextTitle}
                </div>
            </div>}
        </a>

        <a href={entry.data.prevSlug ? getPostUrlBySlug(entry.data.prevSlug) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.prevSlug}]}>
            {entry.data.prevSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-end gap-4">
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.prevTitle}
                </div>
                <Icon name="material-symbols:chevron-right-rounded" class="text-[2rem] text-[var(--primary)]" />
            </div>}
        </a>
    </div>

</MainGridLayout>
