---
// 结构化数据组件，用于生成JSON-LD
import { siteConfig, profileConfig } from "../../config";

interface Props {
	type: 'WebSite' | 'BlogPosting' | 'Person' | 'Organization' | 'BreadcrumbList';
	data?: Record<string, any>;
}

const { type, data = {} } = Astro.props;

// 基础网站信息
const baseWebSite = {
	"@context": "https://schema.org",
	"@type": "WebSite",
	name: siteConfig.title,
	url: Astro.site?.href,
	description: siteConfig.subtitle,
	inLanguage: siteConfig.lang,
	author: {
		"@type": "Person",
		name: profileConfig.name,
		url: Astro.site?.href
	},
	potentialAction: {
		"@type": "SearchAction",
		target: {
			"@type": "EntryPoint",
			urlTemplate: `${Astro.site?.href}search?q={search_term_string}`
		},
		"query-input": "required name=search_term_string"
	}
};

// 个人信息
const basePerson = {
	"@context": "https://schema.org",
	"@type": "Person",
	name: profileConfig.name,
	url: Astro.site?.href,
	image: profileConfig.avatar,
	jobTitle: "游戏开发者、内容创作者、手机摄影师",
	knowsAbout: ["游戏开发", "前端开发", "内容创作", "摄影"],
	sameAs: [
		// 可以添加社交媒体链接
	]
};

// 组织信息
const baseOrganization = {
	"@context": "https://schema.org",
	"@type": "Organization",
	name: siteConfig.title,
	url: Astro.site?.href,
	logo: {
		"@type": "ImageObject",
		url: `${Astro.site?.href}favicon.ico`
	},
	founder: {
		"@type": "Person",
		name: profileConfig.name
	}
};

// 博客文章结构化数据
const baseBlogPosting = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	mainEntityOfPage: {
		"@type": "WebPage",
		"@id": Astro.url.href
	},
	author: {
		"@type": "Person",
		name: profileConfig.name,
		url: Astro.site?.href
	},
	publisher: {
		"@type": "Organization",
		name: siteConfig.title,
		url: Astro.site?.href,
		logo: {
			"@type": "ImageObject",
			url: `${Astro.site?.href}favicon.ico`
		}
	},
	inLanguage: siteConfig.lang
};

// 面包屑导航
const baseBreadcrumbList = {
	"@context": "https://schema.org",
	"@type": "BreadcrumbList",
	itemListElement: []
};

// 根据类型生成对应的结构化数据
let structuredData: Record<string, any>;
switch (type) {
	case 'WebSite':
		structuredData = { ...baseWebSite, ...data };
		break;
	case 'BlogPosting':
		structuredData = { ...baseBlogPosting, ...data };
		break;
	case 'Person':
		structuredData = { ...basePerson, ...data };
		break;
	case 'Organization':
		structuredData = { ...baseOrganization, ...data };
		break;
	case 'BreadcrumbList':
		structuredData = { ...baseBreadcrumbList, ...data };
		break;
	default:
		structuredData = data;
}
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>