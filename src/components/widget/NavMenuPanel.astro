---
import { Icon } from "astro-icon/components";
import { type NavBarLink } from "../../types/config";
import { url } from "../../utils/url-utils";

interface Props {
	links: NavBarLink[];
}

const links = Astro.props.links;
---
<div id="nav-menu-panel" class:list={["float-panel float-panel-closed absolute transition-all fixed right-4 px-2 py-2"]}>
    {links.map((link) => {
        // 如果有子菜单，渲染可展开的菜单项
        if (link.children && link.children.length > 0) {
            return (
                <div class="nav-menu-item-with-children">
                    {/* 主菜单项 */}
                    <div class="group flex justify-between items-center py-2 pl-3 pr-1 rounded-lg gap-8
                        hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition cursor-pointer
                        nav-menu-toggle"
                         data-target={`submenu-${link.name.replace(/\s+/g, '-').toLowerCase()}`}
                    >
                        <div class="transition text-black/75 dark:text-white/75 font-bold group-hover:text-[var(--primary)] group-active:text-[var(--primary)]">
                            {link.name}
                        </div>
                        <Icon name="material-symbols:keyboard-arrow-down" 
                              class="transition text-[1.25rem] text-[var(--primary)] nav-menu-arrow"
                        />
                    </div>
                    {/* 子菜单 */}
                    <div class="nav-submenu overflow-hidden transition-all duration-300 max-h-0" 
                         id={`submenu-${link.name.replace(/\s+/g, '-').toLowerCase()}`}>
                        <div class="pl-4 py-1">
                            {link.children.map((child) => {
                                // 为子菜单项确定图标
                                let childIconName = "";
                                if (child.url.includes("/opensource/")) childIconName = "material-symbols:code";
                                else if (child.url.includes("/personal/")) childIconName = "material-symbols:person";
                                else if (child.url.includes("/collaboration/")) childIconName = "material-symbols:group-work";
                                else if (child.url.includes("/books/")) childIconName = "material-symbols:book";
                                else if (child.url.includes("/movies/")) childIconName = "material-symbols:movie";
                                else if (child.url.includes("/music/")) childIconName = "material-symbols:music-note";
                                else childIconName = "material-symbols:link";
                                
                                return (
                                    <a href={child.external ? child.url : url(child.url)} 
                                       class="group flex items-center py-2 pl-3 pr-1 rounded-lg gap-2
                                           hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition"
                                       target={child.external ? "_blank" : null}
                                    >
                                        {childIconName && <Icon name={childIconName} class="text-[1rem] text-[var(--primary)]" />}
                                        <div class="transition text-black/60 dark:text-white/60 text-sm group-hover:text-[var(--primary)] group-active:text-[var(--primary)]">
                                            {child.name}
                                        </div>
                                        {child.external && <Icon name="fa6-solid:arrow-up-right-from-square"
                                              class="transition text-[0.75rem] text-black/25 dark:text-white/25 ml-auto"
                                        />}
                                    </a>
                                );
                            })}
                        </div>
                    </div>
                </div>
            );
        } else {
            // 没有子菜单的普通链接
            return (
                <a href={link.external ? link.url : url(link.url)} class="group flex justify-between items-center py-2 pl-3 pr-1 rounded-lg gap-8
                    hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] transition
                "
                   target={link.external ? "_blank" : null}
                >
                    <div class="transition text-black/75 dark:text-white/75 font-bold group-hover:text-[var(--primary)] group-active:text-[var(--primary)]">
                        {link.name}
                    </div>
                    {!link.external && <Icon name="material-symbols:chevron-right-rounded"
                          class="transition text-[1.25rem] text-[var(--primary)]"
                    />}
                    {link.external && <Icon name="fa6-solid:arrow-up-right-from-square"
                          class="transition text-[0.75rem] text-black/25 dark:text-white/25 -translate-x-1"
                    />}
                </a>
            );
        }
    })}
</div>
