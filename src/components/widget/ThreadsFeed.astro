---
// Threads 内容显示组件
// 支持显示最新帖子和嵌入式帖子

interface Props {
  username?: string; // Threads 用户名
  postId?: string; // 特定帖子 ID
  theme?: 'light' | 'dark'; // 主题
  maxPosts?: number; // 最大显示帖子数量
  showReplies?: boolean; // 是否显示回复
  height?: string; // 组件高度
  showHeader?: boolean; // 是否显示头部
  showFooter?: boolean; // 是否显示底部
  className?: string; // 自定义 CSS 类
}

const {
  username = 'chacat68',
  postId,
  theme = 'dark',
  maxPosts = 5,
  showReplies = false,
  height = '400px',
  showHeader = true,
  showFooter = true,
  className = ''
} = Astro.props;

// 生成唯一 ID
const componentId = `threads-feed-${Math.random().toString(36).substr(2, 9)}`;
---

<div 
  id={componentId}
  class={`threads-feed-container ${className}`}
  data-username={username}
  data-theme={theme}
  data-max-posts={maxPosts}
  style={`height: ${height};`}
>
  {showHeader && (
    <div class="threads-feed-header">
      <div class="threads-logo">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12.186 24h-.007c-3.581-.024-6.334-1.205-8.184-3.509C2.35 18.44 1.5 15.586 1.5 12.5c0-3.086.85-5.94 2.495-8.491C5.852 1.205 8.605.024 12.186 0h.007c3.581.024 6.334 1.205 8.184 3.509C21.65 5.56 22.5 8.414 22.5 11.5c0 3.086-.85 5.94-2.495 8.491C18.148 22.795 15.395 23.976 12.186 24zM12.5 2c-2.89 0-5.202.906-6.875 2.695C4.297 6.094 3.5 8.547 3.5 11.5s.797 5.406 2.125 6.805C7.298 20.094 9.61 21 12.5 21s5.202-.906 6.875-2.695C20.703 16.906 21.5 14.453 21.5 11.5s-.797-5.406-2.125-6.805C17.702 2.906 15.39 2 12.5 2z"/>
        </svg>
        <span>Threads</span>
      </div>
      <a 
        href={`https://www.threads.com/@${username}`}
        target="_blank"
        rel="noopener noreferrer"
        class="threads-profile-link"
      >
        @{username}
      </a>
    </div>
  )}
  
  <div class="threads-feed-content" id={`${componentId}-content`}>
    <div class="threads-loading">
      <div class="loading-spinner"></div>
      <p>正在加载 Threads 帖子...</p>
    </div>
  </div>
  
  {showFooter && (
    <div class="threads-feed-footer">
      <a 
        href={`https://www.threads.com/@${username}`}
        target="_blank"
        rel="noopener noreferrer"
        class="threads-view-profile"
      >
        查看完整档案
      </a>
    </div>
  )}
</div>

<style>
  .threads-feed-container {
    border: 1px solid var(--color-border);
    border-radius: 12px;
    background: var(--color-bg-secondary);
    overflow: hidden;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }
  
  .threads-feed-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    border-bottom: 1px solid var(--color-border);
    background: var(--color-bg);
  }
  
  .threads-logo {
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 600;
    color: var(--color-text);
  }
  
  .threads-logo svg {
    width: 20px;
    height: 20px;
  }
  
  .threads-profile-link {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
    transition: opacity 0.2s;
  }
  
  .threads-profile-link:hover {
    opacity: 0.8;
  }
  
  .threads-feed-content {
    height: calc(100% - 120px);
    overflow-y: auto;
    padding: 0;
  }
  
  .threads-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 200px;
    color: var(--color-text-secondary);
  }
  
  .loading-spinner {
    width: 24px;
    height: 24px;
    border: 2px solid var(--color-border);
    border-top: 2px solid var(--color-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-bottom: 12px;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .threads-feed-footer {
    padding: 12px 16px;
    border-top: 1px solid var(--color-border);
    background: var(--color-bg);
    text-align: center;
  }
  
  .threads-view-profile {
    color: var(--color-primary);
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    transition: opacity 0.2s;
  }
  
  .threads-view-profile:hover {
    opacity: 0.8;
  }
  
  /* 帖子样式 */
  .threads-post {
    padding: 16px;
    border-bottom: 1px solid var(--color-border);
    transition: background-color 0.2s;
  }
  
  .threads-post:hover {
    background: var(--color-bg-hover, rgba(0, 0, 0, 0.02));
  }
  
  .threads-post:last-child {
    border-bottom: none;
  }
  
  .threads-post-header {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
  }
  
  .threads-post-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
  }
  
  .threads-post-author {
    font-weight: 600;
    color: var(--color-text);
    text-decoration: none;
  }
  
  .threads-post-username {
    color: var(--color-text-secondary);
    font-size: 14px;
  }
  
  .threads-post-date {
    color: var(--color-text-secondary);
    font-size: 14px;
    margin-left: auto;
  }
  
  .threads-post-content {
    color: var(--color-text);
    line-height: 1.5;
    margin-bottom: 12px;
    word-wrap: break-word;
  }
  
  .threads-post-images {
    display: grid;
    gap: 8px;
    margin-bottom: 12px;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .threads-post-images.single {
    grid-template-columns: 1fr;
  }
  
  .threads-post-images.multiple {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .threads-post-image {
    width: 100%;
    height: auto;
    max-height: 300px;
    object-fit: cover;
    border-radius: 4px;
  }
  
  .threads-post-stats {
    display: flex;
    gap: 16px;
    color: var(--color-text-secondary);
    font-size: 14px;
  }
  
  .threads-post-stat {
    display: flex;
    align-items: center;
    gap: 4px;
  }
  
  .threads-error {
    padding: 20px;
    text-align: center;
    color: var(--color-text-secondary);
  }
  
  .threads-error-title {
    font-weight: 600;
    margin-bottom: 8px;
    color: var(--color-text);
  }
</style>

<script>
  // 加载 Threads 帖子数据
  async function loadThreadsPosts(containerId: string) {
    const container = document.getElementById(containerId);
    if (!container) return;
    
    const contentElement = container.querySelector('.threads-feed-content');
    if (!contentElement) return;
    
    try {
      const response = await fetch('/api/threads-posts');
      const result = await response.json();
      
      if (result.success && result.data) {
        renderThreadsPosts(contentElement, result.data);
      } else {
        renderError(contentElement, result.message || '加载失败');
      }
    } catch (error) {
      console.error('加载 Threads 帖子失败:', error);
      renderError(contentElement, '网络错误，请稍后重试');
    }
  }
  
  // 渲染帖子列表
  function renderThreadsPosts(container: Element, posts: any[]) {
    const postsHtml = posts.map(post => `
      <div class="threads-post">
        <div class="threads-post-header">
          ${post.author?.avatar ? `<img src="${post.author.avatar}" alt="${post.author?.name || 'User'}" class="threads-post-avatar">` : ''}
          <div>
            <div class="threads-post-author">${post.author?.name || 'Unknown'}</div>
            <div class="threads-post-username">@${post.author?.username || 'unknown'}</div>
          </div>
          <div class="threads-post-date">${formatDate(post.displayDate)}</div>
        </div>
        
        <div class="threads-post-content">${post.content}</div>
        
        ${post.images && post.images.length > 0 ? `
          <div class="threads-post-images ${post.images.length === 1 ? 'single' : 'multiple'}">
            ${post.images.map((img: string) => `<img src="${img}" alt="Post image" class="threads-post-image">`).join('')}
          </div>
        ` : ''}
        
        <div class="threads-post-stats">
          <div class="threads-post-stat">
            <span>❤️</span>
            <span>${post.likes || 0}</span>
          </div>
          <div class="threads-post-stat">
            <span>💬</span>
            <span>${post.replies || 0}</span>
          </div>
          <div class="threads-post-stat">
            <span>🔄</span>
            <span>${post.reposts || 0}</span>
          </div>
        </div>
      </div>
    `).join('');
    
    container.innerHTML = postsHtml;
  }
  
  // 渲染错误信息
  function renderError(container: Element, message: string) {
    container.innerHTML = `
      <div class="threads-error">
        <div class="threads-error-title">无法加载 Threads 帖子</div>
        <div>${message}</div>
      </div>
    `;
  }
  
  // 格式化日期
  function formatDate(dateString: string): string {
    const date = new Date(dateString);
    const now = new Date();
    const diff = now.getTime() - date.getTime();
    
    const minutes = Math.floor(diff / (1000 * 60));
    const hours = Math.floor(diff / (1000 * 60 * 60));
    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    
    if (minutes < 60) {
      return `${minutes}分钟前`;
    } else if (hours < 24) {
      return `${hours}小时前`;
    } else if (days < 7) {
      return `${days}天前`;
    } else {
      return date.toLocaleDateString('zh-CN');
    }
  }
  
  // 页面加载完成后初始化
  document.addEventListener('DOMContentLoaded', () => {
    const componentId = document.currentScript?.parentElement?.id;
    if (componentId) {
      loadThreadsPosts(componentId);
    }
  });
</script>